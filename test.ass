; start main program
	BRA debutProg
erreurDiv0:
	WSTR "Arret de l'execution: division par z√©ro impossible."
	HALT
debutProg:
; Main program
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.G.xe, R0
	STORE R0, 5(GB)
	LEA 3(GB), R0
	STORE R0, 6(GB)
	LOAD code.Object.equals, R0
	STORE R0, 7(GB)
	LOAD code.G.xe, R0
	STORE R0, 8(GB)
	LOAD code.A.m, R0
	STORE R0, 9(GB)
	BRA debutMain
init.G:
	LOAD #0, R0
	LOAD -2(LB), R2
	STORE R0, 1(R2)
	RTS
init.A:
	LOAD -2(LB), R0
	PUSH R0
	BSR init.G
	LOAD #10, R2
	LOAD -2(LB), R2
	STORE R2, 2(R2)
	RTS
code.G.xe:
	WSTR "zbi"
	LOAD R0, R1
fincode.G.xe:
	RTS
code.A.m:
	LOAD #1, R2
	STORE R2, 1(LB)
	LOAD 1(LB), R2
	LOAD #1, R3
	ADD R3, R2
	LOAD #15, R3
	MUL R3, R2
	LOAD R2, R1
	WINT
fincode.A.m:
	RTS
debutMain:
; Beginning of main instructions:
	NEW #4, R2
	LEA 6(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 10(GB)
	NEW #4, R2
	LEA 6(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 11(GB)
	ADDSP #1
	LOAD 10(GB), R2
	LOAD R2, R0
	STORE R0, 0(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 3(R1)
	SUBSP #1
	HALT
code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R1
	WINT
	RTS
; end main program
