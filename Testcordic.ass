; start main program
	BRA debutProg
erreurDiv0:
	WSTR "Arret de l'execution: division par z√©ro impossible."
	HALT
debutProg:
; Main program
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.Cordic.addAtEnd, R0
	STORE R0, 5(GB)
	LOAD code.Cordic.twoPower, R0
	STORE R0, 8(GB)
	LOAD code.Cordic.createAngleTable, R0
	STORE R0, 7(GB)
	LOAD code.Cordic.cordicDirect, R0
	STORE R0, 10(GB)
	LOAD code.Cordic.getAngleStep, R0
	STORE R0, 6(GB)
	LOAD code.Cordic.byTwoPower, R0
	STORE R0, 9(GB)
	ADDSP #11
	BRA debutMain
init.Cordic:
	LOAD #0x0.0p0, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	LOAD #null, R0
	LOAD -2(LB), R1
	STORE R0, 2(R1)
	LOAD #null, R2
	LOAD -2(LB), R1
	STORE R2, 3(R1)
	LOAD #0, R2
	LOAD -2(LB), R1
	STORE R2, 4(R1)
	LOAD #null, R2
	LOAD -2(LB), R1
	STORE R2, 5(R1)
	LOAD #0, R2
	LOAD -2(LB), R1
	STORE R2, 6(R1)
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 7(R1)
	LOAD #0x1.921fb6p1, R2
	LOAD -2(LB), R1
	STORE R2, 8(R1)
	LOAD #64, R2
	LOAD -2(LB), R1
	STORE R2, 9(R1)
	RTS
code.Cordic.addAtEnd:
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	NEW #10, R1
	LEA 3(GB), R0
	STORE R0, 0(R1)
	PUSH R1
	BSR init.Cordic
	LOAD 0(SP), R1
	STORE R1, 1(LB)
	LOAD -3(LB), R2
	LOAD 1(LB), R3
	LOAD R3, R0
	LEA 1(R0), R3
	STORE R2, 0(R3)
	LOAD #null, R2
	LOAD 1(LB), R3
	LOAD R3, R0
	LEA 2(R0), R3
	STORE R2, 0(R3)
	LOAD -2(LB), R0
	LOAD 4(R0), R2
	LOAD #0, R3
	CMP R3, R2
	BNE debutSinon10
	LOAD 1(LB), R2
	LOAD -2(LB), R0
	STORE R2, 3(R0)
	LOAD 1(LB), R2
	LOAD -2(LB), R0
	STORE R2, 5(R0)
	LOAD #1, R2
	LOAD 1(LB), R3
	LOAD R3, R0
	LEA 7(R0), R3
	STORE R2, 0(R3)
	LOAD #1, R2
	LOAD -2(LB), R0
	STORE R2, 4(R0)
	LOAD #1, R2
	LOAD -2(LB), R0
	STORE R2, 6(R0)
	BRA finSinon0
debutSinon10:
	LOAD 1(LB), R2
	LOAD -2(LB), R0
	LOAD 5(R0), R3
	LOAD R3, R0
	LEA 2(R0), R3
	STORE R2, 0(R3)
	LOAD 1(LB), R2
	LOAD -2(LB), R0
	STORE R2, 5(R0)
	LOAD 1(LB), R2
	LOAD R2, R0
	LEA 7(R0), R2
	LOAD #1, R3
	ADD R3, R2
	LOAD 1(LB), R3
	LOAD R3, R0
	LEA 7(R0), R3
	STORE R2, 0(R3)
	LOAD -2(LB), R0
	LOAD 6(R0), R2
	LOAD #1, R3
	ADD R3, R2
	LOAD -2(LB), R0
	STORE R2, 6(R0)
finSinon0:
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.Cordic.addAtEnd
	WSTR "Erreur : sortie de la methodecode.Cordic.addAtEndsans return"
	WNL
	ERROR
fincode.Cordic.addAtEnd:
	RTS
code.Cordic.getAngleStep:
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	LOAD -2(LB), R0
	LOAD 3(R0), R2
	STORE R2, 1(LB)
debutWhile1:
	LOAD 1(LB), R2
	LOAD R2, R0
	LEA 7(R0), R2
	LOAD #1, R3
	CMP R3, R2
	BEQ finWhile1
	LOAD 1(LB), R2
	LOAD R2, R0
	LEA 7(R0), R2
	LOAD -3(LB), R3
	CMP R3, R2
	BNE debutSinon11
	LOAD 1(LB), R2
	LOAD R2, R0
	LEA 1(R0), R2
	LOAD R2, R0
	BRA finSinon1
debutSinon11:
finSinon1:
	LOAD 1(LB), R3
	LOAD R3, R0
	LEA 2(R0), R3
	LOAD 0(R3), R3
	STORE R3, 1(LB)
	BRA debutWhile1
finWhile1:
	LOAD 1(LB), R3
	LOAD R3, R0
	LEA 7(R0), R3
	LOAD #1, R4
	CMP R4, R3
	BNE debutSinon12
	LOAD 1(LB), R3
	LOAD R3, R0
	LEA 1(R0), R3
	LOAD R3, R0
	BRA finSinon2
debutSinon12:
finSinon2:
	LOAD #0x0.0p0, R4
	LOAD R4, R0
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.Cordic.getAngleStep
	WSTR "Erreur : sortie de la methodecode.Cordic.getAngleStepsans return"
	WNL
	ERROR
fincode.Cordic.getAngleStep:
	RTS
code.Cordic.createAngleTable:
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	ADDSP #2
	LOAD -2(LB), R5
	LOAD R5, R0
	STORE R0, 0(SP)
	LOAD #0x1.921fb6p-1, R6
	STORE R6, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	LOAD R0, R6
	ADDSP #2
	LOAD -2(LB), R7
	LOAD R7, R0
	STORE R0, 0(SP)
	LOAD #0x1.dac67p-2, R8
	STORE R8, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	LOAD R0, R8
	ADDSP #2
	LOAD -2(LB), R9
	LOAD R9, R0
	STORE R0, 0(SP)
	LOAD #0x1.f5b76p-3, R10
	STORE R10, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	LOAD R0, R10
	ADDSP #2
	LOAD -2(LB), R11
	LOAD R11, R0
	STORE R0, 0(SP)
	LOAD #0x1.fd5baap-4, R12
	STORE R12, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	LOAD R0, R12
	ADDSP #2
	LOAD -2(LB), R13
	LOAD R13, R0
	STORE R0, 0(SP)
	LOAD #0x1.ff55bcp-5, R14
	STORE R14, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	LOAD R0, R14
	ADDSP #2
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.ffd55cp-6, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.fff556p-7, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.fffd56p-8, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.ffff56p-9, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.ffffd6p-10, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.fffff6p-11, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.fffffep-12, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-12, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-13, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-14, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-15, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-16, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-17, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-18, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-19, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-20, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-21, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-22, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-23, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-24, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-25, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-26, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-27, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-28, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #0x1.0p-29, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.Cordic.createAngleTable
	WSTR "Erreur : sortie de la methodecode.Cordic.createAngleTablesans return"
	WNL
	ERROR
fincode.Cordic.createAngleTable:
	RTS
code.Cordic.twoPower:
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	PUSH R15
	LOAD #1, R15
	LOAD R15, R0
	FLOAT R0, R15
	STORE R15, 1(LB)
	LOAD #1, R15
	STORE R15, 2(LB)
	LOAD -3(LB), R15
	PUSH R15
	LOAD #0, R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BNE debutSinon13
	PUSH R15
	LOAD #0x1.0p0, R15
	LOAD R15, R0
	BRA finSinon3
debutSinon13:
debutWhile2:
	PUSH R15
	LOAD 2(LB), R15
	PUSH R15
	LOAD -3(LB), R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BGT finWhile2
	PUSH R15
	LOAD 1(LB), R15
	PUSH R15
	LOAD #2, R15
	LOAD R15, R0
	FLOAT R0, R15
	LOAD R15, R1
	POP R15
	MUL R1, R15
	STORE R15, 1(LB)
	PUSH R15
	LOAD 2(LB), R15
	PUSH R15
	LOAD #1, R15
	LOAD R15, R1
	POP R15
	ADD R1, R15
	STORE R15, 2(LB)
	BRA debutWhile2
finWhile2:
	PUSH R15
	LOAD 1(LB), R15
	LOAD R15, R0
finSinon3:
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.Cordic.twoPower
	WSTR "Erreur : sortie de la methodecode.Cordic.twoPowersans return"
	WNL
	ERROR
fincode.Cordic.twoPower:
	RTS
code.Cordic.byTwoPower:
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	PUSH R15
	LOAD #1, R15
	LOAD R15, R0
	FLOAT R0, R15
	STORE R15, 1(LB)
	LOAD #1, R15
	STORE R15, 2(LB)
	LOAD -3(LB), R15
	PUSH R15
	LOAD #0, R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BNE debutSinon14
	PUSH R15
	LOAD #0x1.0p0, R15
	LOAD R15, R0
	BRA finSinon4
debutSinon14:
debutWhile3:
	PUSH R15
	LOAD 2(LB), R15
	PUSH R15
	LOAD -3(LB), R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BGT finWhile3
	PUSH R15
	LOAD 1(LB), R15
	PUSH R15
	LOAD #2, R15
	LOAD R15, R0
	FLOAT R0, R15
	LOAD R15, R0
	LOAD #0x0.0p0, R15
	CMP R0, R15
	BEQ erreurDiv0
	POP R15
	DIV R0, R15
	STORE R15, 1(LB)
	PUSH R15
	LOAD 2(LB), R15
	PUSH R15
	LOAD #1, R15
	LOAD R15, R1
	POP R15
	ADD R1, R15
	STORE R15, 2(LB)
	BRA debutWhile3
finWhile3:
	PUSH R15
	LOAD 1(LB), R15
	LOAD R15, R0
finSinon4:
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.Cordic.byTwoPower
	WSTR "Erreur : sortie de la methodecode.Cordic.byTwoPowersans return"
	WNL
	ERROR
fincode.Cordic.byTwoPower:
	RTS
code.Cordic.cordicDirect:
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	PUSH R15
	LOAD #0x1.36e9dcp-1, R15
	STORE R15, 1(LB)
	LOAD #0, R15
	LOAD R15, R0
	FLOAT R0, R15
	STORE R15, 2(LB)
	STORE R0, 3(LB)
	STORE R0, 4(LB)
	STORE R0, 5(LB)
	LOAD #1, R15
	OPP R15, R15
	LOAD R15, R0
	FLOAT R0, R15
	STORE R15, 6(LB)
	STORE R0, 7(LB)
	LOAD -3(LB), R15
	STORE R15, 8(LB)
	LOAD #0, R15
	STORE R15, 9(LB)
	ADDSP #1
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 4(R1)
	SUBSP #1
	PUSH R15
	LOAD R0, R15
debutWhile4:
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	OPP R15, R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	SLT R15
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	SGT R15
	LOAD R15, R0
	POP R15
	ADD R0, R15
	LOAD #1, R0
	CMP R0, R15
	SGE R15
	LOAD #0, R0
	CMP R15, R0
	BEQ finWhile4
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	OPP R15, R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BGE debutSinon15
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD #2, R15
	LOAD R15, R0
	FLOAT R0, R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	LOAD R15, R1
	POP R15
	MUL R1, R15
	LOAD R15, R1
	POP R15
	ADD R1, R15
	STORE R15, 8(LB)
	BRA finSinon5
debutSinon15:
finSinon5:
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BLE debutSinon16
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD #2, R15
	LOAD R15, R0
	FLOAT R0, R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	LOAD R15, R1
	POP R15
	MUL R1, R15
	LOAD R15, R1
	POP R15
	SUB R1, R15
	STORE R15, 8(LB)
	BRA finSinon6
debutSinon16:
finSinon6:
	BRA debutWhile4
finWhile4:
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	OPP R15, R15
	PUSH R15
	LOAD #2, R15
	LOAD R15, R0
	FLOAT R0, R15
	LOAD R15, R0
	LOAD #0x0.0p0, R15
	CMP R0, R15
	BEQ erreurDiv0
	POP R15
	DIV R0, R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BGE debutSinon17
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	LOAD R15, R1
	POP R15
	ADD R1, R15
	STORE R15, 8(LB)
	BRA finSinon7
debutSinon17:
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	PUSH R15
	LOAD #2, R15
	LOAD R15, R0
	FLOAT R0, R15
	LOAD R15, R0
	LOAD #0x0.0p0, R15
	CMP R0, R15
	BEQ erreurDiv0
	POP R15
	DIV R0, R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BLE debutSinon27
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 8(R0), R15
	LOAD R15, R1
	POP R15
	SUB R1, R15
	STORE R15, 8(LB)
	BRA finSinon7
debutSinon27:
	PUSH R15
	LOAD #1, R15
	LOAD R15, R0
	FLOAT R0, R15
	STORE R15, 6(LB)
finSinon7:
debutWhile5:
	PUSH R15
	LOAD 9(LB), R15
	PUSH R15
	LOAD -2(LB), R0
	LOAD 9(R0), R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BGT finWhile5
	PUSH R15
	LOAD 9(LB), R15
	PUSH R15
	LOAD #29, R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BGT debutSinon18
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD 9(LB), R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 3(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	STORE R15, 7(LB)
	BRA finSinon8
debutSinon18:
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD 9(LB), R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 6(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	STORE R15, 7(LB)
finSinon8:
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD #0, R15
	LOAD R15, R0
	FLOAT R0, R15
	LOAD R15, R0
	POP R15
	CMP R0, R15
	BLT debutSinon19
	PUSH R15
	LOAD 1(LB), R15
	PUSH R15
	LOAD 2(LB), R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD 9(LB), R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 6(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	LOAD R15, R1
	POP R15
	MUL R1, R15
	LOAD R15, R1
	POP R15
	SUB R1, R15
	STORE R15, 3(LB)
	PUSH R15
	LOAD 2(LB), R15
	PUSH R15
	LOAD 1(LB), R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD 9(LB), R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 6(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	LOAD R15, R1
	POP R15
	MUL R1, R15
	LOAD R15, R1
	POP R15
	ADD R1, R15
	STORE R15, 4(LB)
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD 7(LB), R15
	LOAD R15, R1
	POP R15
	SUB R1, R15
	STORE R15, 5(LB)
	BRA finSinon9
debutSinon19:
	PUSH R15
	LOAD 1(LB), R15
	PUSH R15
	LOAD 2(LB), R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD 9(LB), R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 6(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	LOAD R15, R1
	POP R15
	MUL R1, R15
	LOAD R15, R1
	POP R15
	ADD R1, R15
	STORE R15, 3(LB)
	PUSH R15
	LOAD 2(LB), R15
	PUSH R15
	LOAD 1(LB), R15
	ADDSP #2
	PUSH R15
	LOAD -2(LB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD 9(LB), R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 6(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	LOAD R15, R1
	POP R15
	MUL R1, R15
	LOAD R15, R1
	POP R15
	SUB R1, R15
	STORE R15, 4(LB)
	PUSH R15
	LOAD 8(LB), R15
	PUSH R15
	LOAD 7(LB), R15
	LOAD R15, R1
	POP R15
	ADD R1, R15
	STORE R15, 5(LB)
finSinon9:
	PUSH R15
	LOAD 3(LB), R15
	STORE R15, 1(LB)
	PUSH R15
	LOAD 4(LB), R15
	STORE R15, 2(LB)
	PUSH R15
	LOAD 5(LB), R15
	STORE R15, 8(LB)
	PUSH R15
	LOAD 9(LB), R15
	PUSH R15
	LOAD #1, R15
	LOAD R15, R1
	POP R15
	ADD R1, R15
	STORE R15, 9(LB)
	BRA debutWhile5
finWhile5:
	PUSH R15
	LOAD 1(LB), R15
	LOAD R15, R0
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.Cordic.cordicDirect
	WSTR "Erreur : sortie de la methodecode.Cordic.cordicDirectsans return"
	WNL
	ERROR
fincode.Cordic.cordicDirect:
	RTS
debutMain:
; Beginning of main instructions:
	NEW #10, R1
	LEA 3(GB), R0
	STORE R0, 0(R1)
	PUSH R1
	BSR init.Cordic
	LOAD 0(SP), R1
	STORE R1, 11(GB)
	PUSH R15
	LOAD #0x1.921fb6p1, R15
	STORE R15, 12(GB)
	ADDSP #2
	LOAD 11(GB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	PUSH R15
	LOAD #90, R15
	LOAD R15, R0
	FLOAT R0, R15
	PUSH R15
	LOAD 12(GB), R15
	LOAD R15, R1
	POP R15
	MUL R1, R15
	PUSH R15
	LOAD #180, R15
	LOAD R15, R0
	FLOAT R0, R15
	LOAD R15, R0
	LOAD #0x0.0p0, R15
	CMP R0, R15
	BEQ erreurDiv0
	POP R15
	DIV R0, R15
	STORE R15, -1(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 7(R1)
	SUBSP #2
	PUSH R15
	LOAD R0, R15
	LOAD R15, R1
	WFLOAT
	WNL
	HALT
code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
code.instanceOf:
	LOAD -2(LB), R0
	LOAD 0(R0), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
deferencement_null:
	WSTR "Erreur : deferencement_null"
	WNL
	ERROR
pile_pleine:
	WSTR "Erreur : pile_pleine"
	WNL
	ERROR
tas_pleine:
	WSTR "Erreur : tas_pleine"
	WNL
	ERROR
; end main program
