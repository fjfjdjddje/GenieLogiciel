; start main program
	BRA debutProg
erreurDiv0:
	WSTR "Arret de l'execution: division par z√©ro impossible."
	HALT
debutProg:
; Main program
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
	ADDSP #3
	BRA debutMain
debutMain:
; Beginning of main instructions:
	RINT
	LOAD R1, R2
	STORE R2, 3(GB)
	RINT
	LOAD R1, R2
	STORE R2, 4(GB)
	RFLOAT
	LOAD R1, R2
	STORE R2, 5(GB)
	RFLOAT
	LOAD R1, R2
	STORE R2, 6(GB)
	STORE R0, 7(GB)
	LOAD 3(GB), R2
	LOAD R2, R0
	FLOAT R0, R2
	LOAD 5(GB), R3
	MUL R3, R2
	STORE R2, 7(GB)
	LOAD 7(GB), R2
	LOAD R2, R1
	WFLOATX
	WNL
	LOAD 3(GB), R2
	LOAD R2, R0
	FLOAT R0, R2
	LOAD 5(GB), R3
	LOAD #0x0.0p0, R0
	CMP R0, R3
	BEQ erreurDiv0
	DIV R3, R2
	STORE R2, 7(GB)
	LOAD 7(GB), R2
	LOAD R2, R1
	WFLOATX
	WNL
	LOAD 6(GB), R2
	OPP R2, R2
	STORE R2, 7(GB)
	LOAD 7(GB), R2
	LOAD R2, R1
	WFLOATX
	WNL
	LOAD 4(GB), R2
	LOAD R2, R0
	FLOAT R0, R2
	STORE R2, 7(GB)
	LOAD 7(GB), R2
	LOAD R2, R1
	WFLOATX
	WNL
	HALT
code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
code.instanceOf:
	LOAD -2(LB), R0
	LOAD 0(R0), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
deferencement_null:
	WSTR "Erreur : deferencement_null"
	WNL
	ERROR
pile_pleine:
	WSTR "Erreur : pile_pleine"
	WNL
	ERROR
tas_pleine:
	WSTR "Erreur : tas_pleine"
	WNL
	ERROR
; end main program
