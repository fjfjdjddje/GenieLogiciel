; start main program
	BRA debutProg
erreurDiv0:
	WSTR "Arret de l'execution: division par z√©ro impossible."
	ERROR
debutProg:
; Main program
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.match, R0
	STORE R0, 10(GB)
	LOAD code.A.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.setX, R0
	STORE R0, 5(GB)
	LOAD code.A.coordVect, R0
	STORE R0, 9(GB)
	LOAD code.A.getX, R0
	STORE R0, 7(GB)
	LOAD code.A.getY, R0
	STORE R0, 8(GB)
	LOAD code.A.setY, R0
	STORE R0, 6(GB)
	TSTO #11
	BOV pile_pleine
	ADDSP #11
	BRA debutMain
init.A:
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 2(R1)
	RTS
code.A.setX:
	TSTO #13
	BOV pile_pleine
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	LOAD -3(LB), R2
	LOAD -2(LB), R3
	LOAD #null, R0
	CMP R3, R0
	BEQ deferencement_null
	LOAD R3, R0
	LEA 1(R0), R3
	STORE R2, 0(R3)
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.A.setX
	WSTR "Erreur : sortie de la methodecode.A.setXsans return"
	WNL
	ERROR
fincode.A.setX:
	RTS
code.A.setY:
	TSTO #13
	BOV pile_pleine
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	LOAD -3(LB), R2
	LOAD -2(LB), R3
	LOAD #null, R0
	CMP R3, R0
	BEQ deferencement_null
	LOAD R3, R0
	LEA 2(R0), R3
	STORE R2, 0(R3)
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.A.setY
	WSTR "Erreur : sortie de la methodecode.A.setYsans return"
	WNL
	ERROR
fincode.A.setY:
	RTS
code.A.getX:
	TSTO #13
	BOV pile_pleine
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	LOAD -2(LB), R2
	LOAD #null, R0
	CMP R2, R0
	BEQ deferencement_null
	LOAD R2, R0
	LEA 1(R0), R2
	LOAD 0(R2), R2
	LOAD R2, R0
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.A.getX
	WSTR "Erreur : sortie de la methodecode.A.getXsans return"
	WNL
	ERROR
fincode.A.getX:
	RTS
code.A.getY:
	TSTO #13
	BOV pile_pleine
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	LOAD -2(LB), R3
	LOAD #null, R0
	CMP R3, R0
	BEQ deferencement_null
	LOAD R3, R0
	LEA 2(R0), R3
	LOAD 0(R3), R3
	LOAD R3, R0
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.A.getY
	WSTR "Erreur : sortie de la methodecode.A.getYsans return"
	WNL
	ERROR
fincode.A.getY:
	RTS
code.A.coordVect:
	TSTO #13
	BOV pile_pleine
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	LOAD -2(LB), R4
	LOAD #null, R0
	CMP R4, R0
	BEQ deferencement_null
	LOAD R4, R0
	LEA 2(R0), R4
	LOAD -2(LB), R5
	LOAD #null, R0
	CMP R5, R0
	BEQ deferencement_null
	LOAD R5, R0
	LEA 1(R0), R5
	LOAD 0(R4), R4
	LOAD 0(R5), R5
	SUB R5, R4
	LOAD R4, R0
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.A.coordVect
	WSTR "Erreur : sortie de la methodecode.A.coordVectsans return"
	WNL
	ERROR
fincode.A.coordVect:
	RTS
code.A.equals:
	TSTO #13
	BOV pile_pleine
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	LOAD -2(LB), R5
	LOAD #null, R0
	CMP R5, R0
	BEQ deferencement_null
	LOAD R5, R0
	LEA 1(R0), R5
	LOAD 0(R5), R5
	LOAD -3(LB), R6
	LOAD #null, R0
	CMP R6, R0
	BEQ deferencement_null
	LOAD R6, R0
	LEA 1(R0), R6
	LOAD 0(R6), R6
	CMP R6, R5
	SEQ R5
	LOAD -2(LB), R6
	LOAD #null, R0
	CMP R6, R0
	BEQ deferencement_null
	LOAD R6, R0
	LEA 2(R0), R6
	LOAD 0(R6), R6
	LOAD -3(LB), R7
	LOAD #null, R0
	CMP R7, R0
	BEQ deferencement_null
	LOAD R7, R0
	LEA 2(R0), R7
	LOAD 0(R7), R7
	CMP R7, R6
	SEQ R6
	MUL R6, R5
	LOAD R5, R0
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.A.equals
	WSTR "Erreur : sortie de la methodecode.A.equalssans return"
	WNL
	ERROR
fincode.A.equals:
	RTS
code.A.match:
	TSTO #13
	BOV pile_pleine
	PUSH R2
	PUSH R3
	PUSH R4
	PUSH R5
	PUSH R6
	PUSH R7
	PUSH R8
	PUSH R9
	PUSH R10
	PUSH R11
	PUSH R12
	PUSH R13
	PUSH R14
	PUSH R15
	LOAD -3(LB), R6
	LOAD -2(LB), R7
	LOAD #null, R0
	CMP R7, R0
	BEQ deferencement_null
	LOAD R7, R0
	LEA 1(R0), R7
	LOAD 0(R7), R7
	CMP R7, R6
	SEQ R6
	LOAD -4(LB), R7
	LOAD -2(LB), R8
	LOAD #null, R0
	CMP R8, R0
	BEQ deferencement_null
	LOAD R8, R0
	LEA 2(R0), R8
	LOAD 0(R8), R8
	CMP R8, R7
	SEQ R7
	MUL R7, R6
	LOAD R6, R0
	POP R15
	POP R14
	POP R13
	POP R12
	POP R11
	POP R10
	POP R9
	POP R8
	POP R7
	POP R6
	POP R5
	POP R4
	POP R3
	POP R2
	BRA fincode.A.match
	WSTR "Erreur : sortie de la methodecode.A.matchsans return"
	WNL
	ERROR
fincode.A.match:
	RTS
debutMain:
; Beginning of main instructions:
	NEW #3, R1
	LEA 3(GB), R0
	STORE R0, 0(R1)
	PUSH R1
	BSR init.A
	LOAD 0(SP), R1
	STORE R1, 11(GB)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	NEW #3, R1
	LEA 3(GB), R0
	STORE R0, 0(R1)
	PUSH R1
	BSR init.A
	LOAD 0(SP), R1
	STORE R1, 12(GB)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	NEW #3, R1
	LEA 3(GB), R0
	STORE R0, 0(R1)
	PUSH R1
	BSR init.A
	LOAD 0(SP), R1
	STORE R1, 13(GB)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 11(GB), R7
	LOAD R7, R0
	STORE R0, 0(SP)
	LOAD 11(GB), R8
	STORE R8, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 1(R1)
	SUBSP #2
	LOAD R0, R8
	STORE R8, 14(GB)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 12(GB), R8
	LOAD R8, R0
	STORE R0, 0(SP)
	LOAD 11(GB), R9
	STORE R9, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 1(R1)
	SUBSP #2
	LOAD R0, R9
	STORE R9, 15(GB)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 11(GB), R9
	LOAD R9, R0
	STORE R0, 0(SP)
	LOAD 13(GB), R10
	STORE R10, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 1(R1)
	SUBSP #2
	LOAD R0, R10
	STORE R10, 16(GB)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	LOAD 11(GB), R10
	LOAD R10, R0
	STORE R0, 0(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 6(R1)
	SUBSP #1
	LOAD R0, R11
	STORE R11, 17(GB)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 11(GB), R11
	LOAD R11, R0
	STORE R0, 0(SP)
	LOAD #2, R12
	STORE R12, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	LOAD R0, R12
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 12(GB), R12
	LOAD R12, R0
	STORE R0, 0(SP)
	LOAD #2, R13
	STORE R13, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	LOAD R0, R13
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 11(GB), R13
	LOAD R13, R0
	STORE R0, 0(SP)
	LOAD #4, R14
	STORE R14, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 3(R1)
	SUBSP #2
	LOAD R0, R14
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 12(GB), R14
	LOAD R14, R0
	STORE R0, 0(SP)
	LOAD #4, R15
	STORE R15, -1(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 3(R1)
	SUBSP #2
	LOAD R0, R15
	WSTR "true =="
	LOAD R0, R1
	LOAD 14(GB), R15
	LOAD R15, R1
	LOAD #0, R1
	CMP R15, R1
	BEQ printFalse0
	WSTR "true"
	BRA endPrint0
printFalse0:
	WSTR "false"
endPrint0:
	WSTR "true =="
	LOAD R0, R1
	LOAD 15(GB), R15
	LOAD R15, R1
	LOAD #0, R1
	CMP R15, R1
	BEQ printFalse1
	WSTR "true"
	BRA endPrint1
printFalse1:
	WSTR "false"
endPrint1:
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 13(GB), R15
	LOAD R15, R0
	STORE R0, 0(SP)
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD #5, R15
	STORE R15, -2(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD R0, R15
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD 13(GB), R15
	LOAD R15, R0
	POP R15
	STORE R0, 0(SP)
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD #7, R15
	STORE R15, -2(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 3(R1)
	SUBSP #2
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD R0, R15
	WSTR "false =="
	LOAD R0, R1
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD 16(GB), R15
	LOAD R15, R1
	LOAD #0, R1
	CMP R15, R1
	BEQ printFalse2
	WSTR "true"
	BRA endPrint2
printFalse2:
	WSTR "false"
endPrint2:
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	LOAD 13(GB), R15
	LOAD R15, R0
	POP R15
	STORE R0, 0(SP)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD 11(GB), R15
	LOAD R15, R0
	POP R15
	STORE R0, 0(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 4(R1)
	SUBSP #1
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD R0, R15
	STORE R15, -2(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 2(R1)
	SUBSP #2
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD R0, R15
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD 13(GB), R15
	LOAD R15, R0
	POP R15
	STORE R0, 0(SP)
	TSTO #1
	BOV pile_pleine
	ADDSP #1
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD 11(GB), R15
	LOAD R15, R0
	POP R15
	STORE R0, 0(SP)
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 5(R1)
	SUBSP #1
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD R0, R15
	STORE R15, -2(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 3(R1)
	SUBSP #2
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD R0, R15
	TSTO #2
	BOV pile_pleine
	ADDSP #2
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD 11(GB), R15
	LOAD R15, R0
	POP R15
	STORE R0, 0(SP)
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD 13(GB), R15
	STORE R15, -2(SP)
	POP R15
	LOAD 0(SP), R1
	LOAD 0(R1), R1
	BSR 1(R1)
	SUBSP #2
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD R0, R15
	STORE R15, 16(GB)
	WSTR "true =="
	LOAD R0, R1
	TSTO #1
	BOV pile_pleine
	PUSH R15
	LOAD 16(GB), R15
	LOAD R15, R1
	LOAD #0, R1
	CMP R15, R1
	BEQ printFalse3
	WSTR "true"
	BRA endPrint3
printFalse3:
	WSTR "false"
endPrint3:
	WSTR "2=="
	LOAD R0, R1
	LOAD 17(GB), R15
	LOAD R15, R1
	WINT
	HALT
code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
code.instanceOf:
	LOAD -2(LB), R0
	LOAD 0(R0), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
deferencement_null:
	WSTR "Erreur : deferencement_null"
	WNL
	ERROR
pile_pleine:
	WSTR "Erreur : pile_pleine"
	WNL
	ERROR
tas_pleine:
	WSTR "Erreur : tas_pleine"
	WNL
	ERROR
; end main program
